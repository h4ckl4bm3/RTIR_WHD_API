#This is my modified version of the request-tracker.conf file for Apache.

# Tell FastCGI to put its temporary files somewhere sane; this may
    # be necessary if your distribution doesn't already set it
    #FastCgiIpcDir /tmp

    FastCgiServer /opt/rt4/sbin/rt-server.fcgi -processes 5 -idle-timeout 300

    <VirtualHost *:80>
        ServerName support.example.com
        ### Optional apache logs for RT
        # Ensure that your log rotation scripts know about these files
        # ErrorLog /opt/rt4/var/log/apache2.error
        # TransferLog /opt/rt4/var/log/apache2.access
        # LogLevel debug

        AddDefaultCharset UTF-8

        Alias /helpdesk /opt/RTIR_WHD_API/helpdesk/
        <Location /helpdesk>
            Order allow,deny
            Allow from all
        </Location>
        <Directory /opt/RTIR_WHD_API/helpdesk>
            AllowOverride all
        </Directory>

        ScriptAlias / /opt/rt4/sbin/rt-server.fcgi/

        DocumentRoot "/opt/rt4/share/html"
        <Location />
            #Order allow,deny
            #Allow from all
	         Require all granted

            Options +ExecCGI
            AddHandler fastcgi-script fcgi
        </Location>
    </VirtualHost>


<IfModule mod_ssl.c>
<VirtualHost *:443>
        ServerName support.example.com

        AddDefaultCharset UTF-8

        Alias /helpdesk /opt/RTIR_WHD_API/helpdesk/
        <Location /helpdesk>
            Order allow,deny
            Allow from all
        </Location>
        <Directory /opt/RTIR_WHD_API/helpdesk>
            AllowOverride all
        </Directory>

        DocumentRoot "/opt/rt4/share/html"

        ScriptAlias / /opt/rt4/sbin/rt-server.fcgi/

        <Location />
            #Order allow,deny
            #Allow from all
            Require all granted

            Options +ExecCGI
            AddHandler fastcgi-script fcgi
        </Location>

    CustomLog /var/log/apache2/ssl-access.log combined
    ErrorLog /var/log/apache2/ssl-error.log

    SSLEngine On
    SSLCertificateFile /etc/apache2/ssl/support.example.com.crt
    SSLCertificateKeyFile /etc/apache2/ssl/support.example.com.key

</VirtualHost>
</IfModule>
